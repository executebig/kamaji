<!DOCTYPE html>
<html>
  <head>
    <title>Mass</title>
    <link rel="stylesheet" href="/css/style.css" />

    <style>
      form {
        display: flex;
        flex-direction: column;
        max-width: 800px;
      }

      label {
        display: flex;
      }

      input {
        flex: 1;
      }
    </style>
  </head>
  <body>
    <h1>Manual Submission Demo</h1>
    <form action="" method="post" id="form-normal">
      <select name="template">
        <option value="" selected disabled hidden>Select a Template</option>
        <% for (const template of templates) { %>
        <option value="<%= template.id %>"><%= template.name %></option>
        <% } %>
      </select>

      <label
        >Subject:
        <input name="subject" type="text" />
      </label>

      <label
        >Fields:
        <textarea name="fields" cols="30" rows="10"></textarea>
      </label>

      <label
        >Email column:
        <input name="emailKey" type="text" />
      </label>

      <button type="submit">Submit</button>
    </form>

    <h1>File Upload Demo</h1>
    <form action="" method="POST" id="form-file">
      <select name="template">
        <option value="" selected disabled hidden>Select a Template</option>
        <% for (const template of templates) { %>
        <option value="<%= template.id %>"><%= template.name %></option>
        <% } %>
      </select>

      <label
        >Subject:
        <input name="subject" type="text" />
      </label>

      <input
        type="file"
        name="file"
        accept=".XLSB,.XLSX,.XLSM,.XLS,.XML,.CSV"
      />

      <textarea
        name="fields"
        id=""
        cols="30"
        rows="10"
        readonly
        style="background-color: #ddd"
      ></textarea>

      <label
        >Email column:
        <select name="emailKey"></select>
      </label>

      <button type="submit">Submit</button>
    </form>

    <script
      src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.16.9/xlsx.min.js"
      integrity="sha512-Bkf3qaV86NxX+7MyZnLPWNt0ZI7/OloMlRo8z8KPIEUXssbVwB1E0bWVeCvYHjnSPwh4uuqDryUnRdcUw6FoTg=="
      crossorigin="anonymous"
    ></script>
    <script>
      const fields = document.querySelector('#form-file textarea[name=fields]')

      const emailKey = document.querySelector(
        '#form-file select[name=emailKey]'
      )

      document
        .querySelector('#form-file > input[type=file]')
        .addEventListener('change', (e) => {
          if (!e.target.files) return

          const file = e.target.files[0]
          const reader = new FileReader()

          reader.onload = () => {
            let res

            switch (file.type) {
              case 'text/csv':
                // yoink: https://stackoverflow.com/questions/27979002/convert-csv-data-into-json-format-using-javascript
                const lines = new TextDecoder('utf-8')
                  .decode(reader.result)
                  .trim()
                  .split('\n')
                const headers = lines.shift().split(',')

                res = lines.map((line) => {
                  let obj = {}

                  line.split(',').forEach((value, i) => {
                    obj[headers[i]] = value
                  })

                  return obj
                })

                break
              case 'application/vnd.ms-excel':
              case 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet':
                // TODO: Implement multiple sheets (only using first one rn)
                const wb = XLSX.read(reader.result, { type: 'array' })
                const sheet = wb.Sheets[wb.SheetNames[0]]
                res = XLSX.utils.sheet_to_json(sheet)

                break
            }

            fields.textContent = JSON.stringify(res, null, 4)

            // Assuming uniform row elements
            Object.keys(res[0]).forEach((key) => {
              const node = document.createElement('option')
              node.value = node.textContent = key
              emailKey.appendChild(node)
            })
          }

          reader.readAsArrayBuffer(e.target.files[0])
        })
    </script>
  </body>
</html>
